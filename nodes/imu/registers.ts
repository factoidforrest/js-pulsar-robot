export const bno055Registers = {
  // I2C addresses
  BNO055_ADDRESS_A: 0x28,
  BNO055_ADDRESS_B: 0x29,
  BNO055_ID: 0xa0,

  // Page id register definition
  BNO055_PAGE_ID_ADDR: 0x07,

  // PAGE0 REGISTER DEFINITION START
  BNO055_CHIP_ID_ADDR: 0x00,
  BNO055_ACCEL_REV_ID_ADDR: 0x01,
  BNO055_MAG_REV_ID_ADDR: 0x02,
  BNO055_GYRO_REV_ID_ADDR: 0x03,
  BNO055_SW_REV_ID_LSB_ADDR: 0x04,
  BNO055_SW_REV_ID_MSB_ADDR: 0x05,
  BNO055_BL_REV_ID_ADDR: 0x06,

  // Accel data register
  BNO055_ACCEL_DATA_X_LSB_ADDR: 0x08,
  BNO055_ACCEL_DATA_X_MSB_ADDR: 0x09,
  BNO055_ACCEL_DATA_Y_LSB_ADDR: 0x0a,
  BNO055_ACCEL_DATA_Y_MSB_ADDR: 0x0b,
  BNO055_ACCEL_DATA_Z_LSB_ADDR: 0x0c,
  BNO055_ACCEL_DATA_Z_MSB_ADDR: 0x0d,

  // Mag data register
  BNO055_MAG_DATA_X_LSB_ADDR: 0x0e,
  BNO055_MAG_DATA_X_MSB_ADDR: 0x0f,
  BNO055_MAG_DATA_Y_LSB_ADDR: 0x10,
  BNO055_MAG_DATA_Y_MSB_ADDR: 0x11,
  BNO055_MAG_DATA_Z_LSB_ADDR: 0x12,
  BNO055_MAG_DATA_Z_MSB_ADDR: 0x13,

  // Gyro data registers
  BNO055_GYRO_DATA_X_LSB_ADDR: 0x14,
  BNO055_GYRO_DATA_X_MSB_ADDR: 0x15,
  BNO055_GYRO_DATA_Y_LSB_ADDR: 0x16,
  BNO055_GYRO_DATA_Y_MSB_ADDR: 0x17,
  BNO055_GYRO_DATA_Z_LSB_ADDR: 0x18,
  BNO055_GYRO_DATA_Z_MSB_ADDR: 0x19,

  // Euler data registers
  BNO055_EULER_H_LSB_ADDR: 0x1a,
  BNO055_EULER_H_MSB_ADDR: 0x1b,
  BNO055_EULER_R_LSB_ADDR: 0x1c,
  BNO055_EULER_R_MSB_ADDR: 0x1d,
  BNO055_EULER_P_LSB_ADDR: 0x1e,
  BNO055_EULER_P_MSB_ADDR: 0x1f,

  // Quaternion data registers
  BNO055_QUATERNION_DATA_W_LSB_ADDR: 0x20,
  BNO055_QUATERNION_DATA_W_MSB_ADDR: 0x21,
  BNO055_QUATERNION_DATA_X_LSB_ADDR: 0x22,
  BNO055_QUATERNION_DATA_X_MSB_ADDR: 0x23,
  BNO055_QUATERNION_DATA_Y_LSB_ADDR: 0x24,
  BNO055_QUATERNION_DATA_Y_MSB_ADDR: 0x25,
  BNO055_QUATERNION_DATA_Z_LSB_ADDR: 0x26,
  BNO055_QUATERNION_DATA_Z_MSB_ADDR: 0x27,

  // Linear acceleration data registers
  BNO055_LINEAR_ACCEL_DATA_X_LSB_ADDR: 0x28,
  BNO055_LINEAR_ACCEL_DATA_X_MSB_ADDR: 0x29,
  BNO055_LINEAR_ACCEL_DATA_Y_LSB_ADDR: 0x2a,
  BNO055_LINEAR_ACCEL_DATA_Y_MSB_ADDR: 0x2b,
  BNO055_LINEAR_ACCEL_DATA_Z_LSB_ADDR: 0x2c,
  BNO055_LINEAR_ACCEL_DATA_Z_MSB_ADDR: 0x2d,

  // Gravity data registers
  BNO055_GRAVITY_DATA_X_LSB_ADDR: 0x2e,
  BNO055_GRAVITY_DATA_X_MSB_ADDR: 0x2f,
  BNO055_GRAVITY_DATA_Y_LSB_ADDR: 0x30,
  BNO055_GRAVITY_DATA_Y_MSB_ADDR: 0x31,
  BNO055_GRAVITY_DATA_Z_LSB_ADDR: 0x32,
  BNO055_GRAVITY_DATA_Z_MSB_ADDR: 0x33,

  // Temperature data register
  BNO055_TEMP_ADDR: 0x34,

  // Status registers
  BNO055_CALIB_STAT_ADDR: 0x35,
  BNO055_SELFTEST_RESULT_ADDR: 0x36,
  BNO055_INTR_STAT_ADDR: 0x37,

  BNO055_SYS_CLK_STAT_ADDR: 0x38,
  BNO055_SYS_STAT_ADDR: 0x39,
  BNO055_SYS_ERR_ADDR: 0x3a,

  // Unit selection register
  BNO055_UNIT_SEL_ADDR: 0x3b,
  BNO055_DATA_SELECT_ADDR: 0x3c,

  // Mode registers
  BNO055_OPR_MODE_ADDR: 0x3d,
  BNO055_PWR_MODE_ADDR: 0x3e,

  BNO055_SYS_TRIGGER_ADDR: 0x3f,
  BNO055_TEMP_SOURCE_ADDR: 0x40,

  // Axis remap registers
  BNO055_AXIS_MAP_CONFIG_ADDR: 0x41,
  BNO055_AXIS_MAP_SIGN_ADDR: 0x42,

  // Axis remap values
  AXIS_REMAP_X: 0x00,
  AXIS_REMAP_Y: 0x01,
  AXIS_REMAP_Z: 0x02,
  AXIS_REMAP_POSITIVE: 0x00,
  AXIS_REMAP_NEGATIVE: 0x01,

  // SIC registers
  BNO055_SIC_MATRIX_0_LSB_ADDR: 0x43,
  BNO055_SIC_MATRIX_0_MSB_ADDR: 0x44,
  BNO055_SIC_MATRIX_1_LSB_ADDR: 0x45,
  BNO055_SIC_MATRIX_1_MSB_ADDR: 0x46,
  BNO055_SIC_MATRIX_2_LSB_ADDR: 0x47,
  BNO055_SIC_MATRIX_2_MSB_ADDR: 0x48,
  BNO055_SIC_MATRIX_3_LSB_ADDR: 0x49,
  BNO055_SIC_MATRIX_3_MSB_ADDR: 0x4a,
  BNO055_SIC_MATRIX_4_LSB_ADDR: 0x4b,
  BNO055_SIC_MATRIX_4_MSB_ADDR: 0x4c,
  BNO055_SIC_MATRIX_5_LSB_ADDR: 0x4d,
  BNO055_SIC_MATRIX_5_MSB_ADDR: 0x4e,
  BNO055_SIC_MATRIX_6_LSB_ADDR: 0x4f,
  BNO055_SIC_MATRIX_6_MSB_ADDR: 0x50,
  BNO055_SIC_MATRIX_7_LSB_ADDR: 0x51,
  BNO055_SIC_MATRIX_7_MSB_ADDR: 0x52,
  BNO055_SIC_MATRIX_8_LSB_ADDR: 0x53,
  BNO055_SIC_MATRIX_8_MSB_ADDR: 0x54,

  // Accelerometer Offset registers
  ACCEL_OFFSET_X_LSB_ADDR: 0x55,
  ACCEL_OFFSET_X_MSB_ADDR: 0x56,
  ACCEL_OFFSET_Y_LSB_ADDR: 0x57,
  ACCEL_OFFSET_Y_MSB_ADDR: 0x58,
  ACCEL_OFFSET_Z_LSB_ADDR: 0x59,
  ACCEL_OFFSET_Z_MSB_ADDR: 0x5a,

  // Magnetometer Offset registers
  MAG_OFFSET_X_LSB_ADDR: 0x5b,
  MAG_OFFSET_X_MSB_ADDR: 0x5c,
  MAG_OFFSET_Y_LSB_ADDR: 0x5d,
  MAG_OFFSET_Y_MSB_ADDR: 0x5e,
  MAG_OFFSET_Z_LSB_ADDR: 0x5f,
  MAG_OFFSET_Z_MSB_ADDR: 0x60,

  // Gyroscope Offset registers
  GYRO_OFFSET_X_LSB_ADDR: 0x61,
  GYRO_OFFSET_X_MSB_ADDR: 0x62,
  GYRO_OFFSET_Y_LSB_ADDR: 0x63,
  GYRO_OFFSET_Y_MSB_ADDR: 0x64,
  GYRO_OFFSET_Z_LSB_ADDR: 0x65,
  GYRO_OFFSET_Z_MSB_ADDR: 0x66,

  // Radius registers
  ACCEL_RADIUS_LSB_ADDR: 0x67,
  ACCEL_RADIUS_MSB_ADDR: 0x68,
  MAG_RADIUS_LSB_ADDR: 0x69,
  MAG_RADIUS_MSB_ADDR: 0x6a,

  // Power modes
  POWER_MODE_NORMAL: 0x00,
  POWER_MODE_LOWPOWER: 0x01,
  POWER_MODE_SUSPEND: 0x02,

  // Operation mode settings
  OPERATION_MODE_CONFIG: 0x00,
  OPERATION_MODE_ACCONLY: 0x01,
  OPERATION_MODE_MAGONLY: 0x02,
  OPERATION_MODE_GYRONLY: 0x03,
  OPERATION_MODE_ACCMAG: 0x04,
  OPERATION_MODE_ACCGYRO: 0x05,
  OPERATION_MODE_MAGGYRO: 0x06,
  OPERATION_MODE_AMG: 0x07,
  OPERATION_MODE_IMUPLUS: 0x08,
  OPERATION_MODE_COMPASS: 0x09,
  OPERATION_MODE_M4G: 0x0a,
  OPERATION_MODE_NDOF_FMC_OFF: 0x0b,
  OPERATION_MODE_NDOF: 0x0c,

  // Communication constants
  COM_START_BYTE_WR: 0xaa,
  COM_START_BYTE_RESP: 0xbb,
  COM_START_BYTE_ERROR_RESP: 0xee,
  COM_READ: 0x01,
  COM_WRITE: 0x00,

  // Default calibration values (taken from desk test approximation.) [x y z]
  // Signed hex 16 bit representation
  // +/- 2000 units (at max 2G)    (1 unit = 1 mg = 1 LSB = 0.01 m/s2)
  DEFAULT_OFFSET_ACC: [0xff_ec, 0x00_a5, 0xff_e8],
  // +/- 6400 units                (1 unit = 1/16 uT)
  DEFAULT_OFFSET_MAG: [0xff_b4, 0xfe_9e, 0x02_7d],
  // +/- 2000 units up to 32000 (dps range dependent)               (1 unit = 1/16 dps)
  DEFAULT_OFFSET_GYR: [0x00_02, 0xff_ff, 0xff_ff],

  DEFAULT_RADIUS_MAG: 0x0,
  DEFAULT_RADIUS_ACC: 0x3_e8,

  // Sensor standard deviation squared (^2) defaults [x, y, z]
  // Used to get covariance matrices (stddev^2 = variance)
  DEFAULT_VARIANCE_ACC: [0.017, 0.017, 0.017],
  DEFAULT_VARIANCE_ANGULAR_VEL: [0.04, 0.04, 0.04],
  DEFAULT_VARIANCE_ORIENTATION: [0.0159, 0.0159, 0.0159],
  // TODO(flynneva) calculate default magnetic variance matrice
  DEFAULT_VARIANCE_MAG: [0, 0, 0],
} as const;
